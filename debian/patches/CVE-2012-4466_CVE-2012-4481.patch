Description: Prevent untainted strings from being incorrectly tainted
 This flaw allowed untainted strings to be tainted and modified, even in
 safe level 4.
 
 Note that the upstream revision contains some changes that did not affect
 ruby1.8.7 as they were previously addressed by the fix for CVE-2011-1005. This
 is a selective backport to only address CVE-2012-4466, CVE-2012-4481, and the
 test case changes.
Origin: backport, http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&revision=37068
Index: ruby1.8-1.8.7.358/error.c
===================================================================
--- ruby1.8-1.8.7.358.orig/error.c	2012-10-10 00:34:20.993586367 -0700
+++ ruby1.8-1.8.7.358/error.c	2012-10-10 00:34:25.813586481 -0700
@@ -665,9 +665,6 @@
 
     if (NIL_P(mesg)) return rb_class_name(CLASS_OF(exc));
     StringValue(str);
-    if (str != mesg) {
-	OBJ_INFECT(str, mesg);
-    }
     return str;
 }
 
@@ -757,7 +754,6 @@
 	args[2] = d;
 	mesg = rb_f_sprintf(3, args);
     }
-    if (OBJ_TAINTED(obj)) OBJ_TAINT(mesg);
     return mesg;
 }
 
Index: ruby1.8-1.8.7.358/test/ruby/test_exception.rb
===================================================================
--- ruby1.8-1.8.7.358.orig/test/ruby/test_exception.rb	2012-10-10 00:34:20.993586367 -0700
+++ ruby1.8-1.8.7.358/test/ruby/test_exception.rb	2012-10-10 00:34:25.813586481 -0700
@@ -204,6 +204,32 @@
     o.taint
     e = NameError.new(o)
     s = e.to_s
-    assert_equal(true, s.tainted?)
+    assert_equal(false, s.tainted?)
+  end
+
+  def test_exception_to_s_should_not_propagate_untrustedness
+    favorite_lang = "Ruby"
+
+    for exc in [Exception, NameError]
+      assert_raise(SecurityError) do
+        lambda {
+          $SAFE = 4
+          exc.new(favorite_lang).to_s
+          favorite_lang.replace("Python")
+        }.call
+      end
+    end
+
+    assert_raise(SecurityError) do
+      lambda {
+        $SAFE = 4
+        o = Object.new
+        class << o; self; end.instance_eval { define_method(:to_str) { favorite_lang } }
+        NameError.new(o).to_s
+        favorite_lang.replace("Python")
+      }.call
+    end
+
+    assert_equal("Ruby", favorite_lang)
   end
 end
